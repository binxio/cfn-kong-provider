AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation Kong API Gateway Provider
Parameters:
  AppVPC:
    Type: String
    Default: ''
  PrivateSubnets:
    Type: CommaDelimitedList
    Default: ''
  DefaultSecurityGroup:
    Type: String
    Default: ''
Conditions:
  DoNotAttachToVpc: !Equals
    - !Ref 'AppVPC'
    - ''
Resources:
  LambdaPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CFNCustomKongProviderPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - ssm:GetParameter
            Resource:
              - '*'
          - Effect: Allow
            Action:
              - kms:Encrypt
            Resource:
              - '*'
          - Action:
              - logs:*
            Resource: arn:aws:logs:*:*:*
            Effect: Allow
      Roles:
        - !Ref 'LambdaRole'
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com

  CFNKongProvider:
    Type: AWS::Lambda::Function
    DependsOn:
      - LambdaPolicy
    Properties:
      Description: CloudFormation Custom::KongAPI implementation
      PackageType: Image
      Code:
        ImageUri: 463637877380.dkr.ecr.eu-central-1.amazonaws.com/xebia/cfn-kong-provider:1.0.0
      FunctionName: binxio-cfn-kong-provider
      MemorySize: 128
      Role: !GetAtt 'LambdaRole.Arn'
      VpcConfig: !If
        - DoNotAttachToVpc
        - !Ref 'AWS::NoValue'
        - SecurityGroupIds:
            - !Ref 'DefaultSecurityGroup'
          SubnetIds: !Ref 'PrivateSubnets'
